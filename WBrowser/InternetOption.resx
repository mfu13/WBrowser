<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>